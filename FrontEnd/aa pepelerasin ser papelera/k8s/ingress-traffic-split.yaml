# Ingress principal para Python (50% del tráfico)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: python-api-primary
  namespace: so1-fase2
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Mejor distribución con hash consistente
    nginx.ingress.kubernetes.io/upstream-hash-by: "consistent $remote_addr$request_uri"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: python-api-service
            port:
              number: 8000
      - path: /python(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: python-api-service
            port:
              number: 8000

---
# Ingress canary para Node.js (50% del tráfico)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodejs-api-canary
  namespace: so1-fase2
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Configuración canary sin snippets
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "50"
    # Hash consistente para mejor distribución
    nginx.ingress.kubernetes.io/upstream-hash-by: "consistent $remote_addr$request_uri"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: nodejs-api-service
            port:
              number: 7000

---
# Ingress directo para Node.js
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodejs-api-direct
  namespace: so1-fase2
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /nodejs(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: nodejs-api-service
            port:
              number: 7000

---
# ===================================================================
# MÉTRICAS - Configuración separada para balanceo 50/50
# ===================================================================

# Métricas - Ingress principal para Python
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metricas-python-primary
  namespace: so1-fase2
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    # Distribución más equitativa
    nginx.ingress.kubernetes.io/upstream-hash-by: "consistent $remote_addr$request_uri"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /metricas
        pathType: Prefix
        backend:
          service:
            name: python-api-service
            port:
              number: 8000

---
# Métricas - Ingress canary para Node.js
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metricas-nodejs-canary
  namespace: so1-fase2
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    # Configuración canary
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "50"
    nginx.ingress.kubernetes.io/upstream-hash-by: "consistent $remote_addr$request_uri"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /metricas
        pathType: Prefix
        backend:
          service:
            name: nodejs-api-service
            port:
              number: 7000

---